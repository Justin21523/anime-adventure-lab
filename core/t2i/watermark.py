# core/t2i/watermark.py
from typing import List, Dict, Any, Tuple, Optional
from PIL import Image, ImageDraw, ImageFont


class WatermarkProcessor:
    """Add watermarks to generated images"""

    def __init__(self):
        self.default_text = "Generated by CharaForge"

    def add_watermark(
        self, image: Image.Image, text: Optional[str] = None, opacity: float = 0.1
    ) -> Image.Image:
        """Add text watermark to image"""
        if not text:
            text = self.default_text

        # Create watermark overlay
        overlay = Image.new("RGBA", image.size, (255, 255, 255, 0))
        draw = ImageDraw.Draw(overlay)

        # Try to use a nice font, fallback to default
        try:
            font = ImageFont.truetype("arial.ttf", 20)
        except:
            font = ImageFont.load_default()

        # Position watermark at bottom right
        bbox = draw.textbbox((0, 0), text, font=font)
        text_width = bbox[2] - bbox[0]
        text_height = bbox[3] - bbox[1]

        x = image.width - text_width - 10
        y = image.height - text_height - 10

        # Draw text with low opacity
        draw.text((x, y), text, font=font, fill=(255, 255, 255, int(255 * opacity)))

        # Composite with original
        return Image.alpha_composite(image.convert("RGBA"), overlay).convert("RGB")
